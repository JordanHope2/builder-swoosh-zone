name: Deploy SSR to Swizzonic
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with: { node-version: '20' }

      - name: Preflight secrets
        run: |
          missing=()
          for k in VITE_SUPABASE_URL VITE_SUPABASE_ANON_KEY SUPABASE_SERVICE_ROLE_KEY \
                   VITE_BUILDER_PUBLIC_API_KEY SFTP_HOST SFTP_USERNAME SFTP_REMOTE_DIR SSH_USER; do
            [ -z "${!k}" ] && missing+=("$k")
          done
          echo "Resolved remote: ${SFTP_USERNAME}@${SFTP_HOST}:${SFTP_REMOTE_DIR}"
          if [ ${#missing[@]} -gt 0 ]; then
            echo "::error::Missing secrets: ${missing[*]}"
            exit 1
          fi
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          VITE_BUILDER_PUBLIC_API_KEY: ${{ secrets.VITE_BUILDER_PUBLIC_API_KEY }}
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
          SFTP_REMOTE_DIR: ${{ secrets.SFTP_REMOTE_DIR }}

      - name: Install & build
        run: |
          npm ci
          npm run build
          du -sh dist/* || true
          du -sh dist/server || true
          du -sh dist/spa || true

      - name: SFTP deploy (primary)
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.SFTP_HOST }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: ${{ secrets.SFTP_PORT || 22 }}
          local_path: "dist/*"
          remote_path: "${{ secrets.SFTP_REMOTE_DIR }}"
          sftp_only: true
        continue-on-error: true

      - name: FTP fallback (conditional)
        if: failure()
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: "${{ secrets.SFTP_REMOTE_DIR }}/"
          local-dir: "dist/"

      - name: Passenger restart
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SFTP_HOST }} "mkdir -p ${{ secrets.SFTP_REMOTE_DIR }}/tmp && touch ${{ secrets.SFTP_REMOTE_DIR }}/tmp/restart.txt" || true
